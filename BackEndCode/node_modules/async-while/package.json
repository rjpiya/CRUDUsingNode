{
  "_from": "async-while",
  "_id": "async-while@1.1.0",
  "_inBundle": false,
  "_integrity": "sha1-p45T2nh7QDiSq25DO6bC80Ac4Zc=",
  "_location": "/async-while",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "async-while",
    "name": "async-while",
    "escapedName": "async-while",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/async-while/-/async-while-1.1.0.tgz",
  "_shasum": "a78e53da787b403892ab6e433ba6c2f3401ce197",
  "_spec": "async-while",
  "_where": "C:\\Users\\dotnet-server\\Documents\\Projects\\FCSNode",
  "author": {
    "name": "Tyler Johnson",
    "email": "tyler@tylerjohnson.me"
  },
  "bugs": {
    "url": "https://github.com/tyler-johnson/async-while/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "any-promise": "~0.1.0"
  },
  "deprecated": false,
  "description": "Asynchronous while loops using ES6 Promises.",
  "devDependencies": {
    "browserify": "~12.0.1",
    "jshint": "~2.8.0",
    "mkdirp": "~0.5.1"
  },
  "homepage": "https://github.com/tyler-johnson/async-while#readme",
  "keywords": [
    "promise",
    "async",
    "while",
    "loop"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "async-while",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tyler-johnson/async-while.git"
  },
  "scripts": {
    "build": "mkdirp dist ; browserify index.js --standalone asyncWhile > dist/async-while.js ; uglifyjs dist/async-while.js > dist/async-while.min.js",
    "lint": "jshint *.js",
    "prepublish": "npm run lint && npm run build"
  },
  "version": "1.1.0"
}
